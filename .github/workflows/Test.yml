name: Test For Linux And Docker

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v0.1.0'

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [
          { target: "x86_64-unknown-linux-musl", image_tag: "x86_64-musl", wheel: true },
        ]
    container:
      image: docker://messense/rust-musl-cross:${{ matrix.platform.image_tag }}
      env:
        CFLAGS_armv7_unknown_linux_musleabihf: '-mfpu=vfpv3-d16'
    steps:
      - uses: actions/checkout@v2
      - name: Build wheels - manylinux
        uses: messense/maturin-action@main
        with:
          target: ${{ matrix.platform.target }}
          manylinux: auto
          container: off
          args: --release -o dist --strip
      - name: Build wheels - musllinux
        if: matrix.platform.wheel
        uses: messense/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          manylinux: musllinux_1_1
          container: off
          args: --release --out dist --strip
      - name: Upload wheels
        if: matrix.platform.wheel
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist
          if-no-files-found: error
      - name: Upx compress binary
        uses: crazy-max/ghaction-upx@v1
        with:
          version: latest
          files: target/${{ matrix.platform.target }}/release/axum-converter
      - name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform.target }}-bin
          path: target/${{ matrix.platform.target }}/release/axum-converter
          if-no-files-found: error
      - name: Archive binary
        run: |
          cd target/${{ matrix.platform.target }}/release
          tar czvf axum-converter-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz axum-converter
          shasum -a 256 axum-converter-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz > axum-converter-${{ github.event.inputs.tag }}.${{ matrix.platform.target }}.tar.gz.sha256
          cd -
      - name: Upload binary to GitHub Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.platform.target }}/release/axum-converter*.tar.gz*
          file_glob: true
          overwrite: true
          tag: "refs/tags/${{ github.event.inputs.tag }}"
  docker:
    name: Build Docker Image
    runs-on: ubuntu-latest
    needs: [ linux ]
    environment: Docker Hub
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: x86_64-unknown-linux-musl-bin
      - run: |
          chmod a+x axum-converter
          mv axum-converter axum-converter-amd64
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ykxvk8yl5l/axum-converter
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Setup QEMU
        uses: dbhi/qus/action@main
      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKER_USER}}
          password: ${{secrets.DOCKER_PASSWORD}}
      - name: docker build
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: ykxvk8yl5l/axum-converter:latest
          labels: ${{ steps.meta.outputs.labels }}
  
